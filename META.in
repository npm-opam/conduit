version = "@VERSION@"
description = "Resolve URIs into Async or Lwt channels"
requires = "@BASE_REQUIRES@"
archive(byte) = "conduit.cma"
archive(byte, plugin) = "conduit.cma"
archive(native) = "conduit.cmxa"
archive(native, plugin) = "conduit.cmxs"
exists_if = "conduit.cma"

package "lwt" (
 version = "@VERSION@"
 description = "Resolve URIs into Lwt channels"
 requires = "conduit @LWT_REQUIRES@"
 archive(byte) = "conduit-lwt.cma"
 archive(byte, plugin) = "conduit-lwt.cma"
 archive(native) = "conduit-lwt.cmxa"
 archive(native, plugin) = "conduit-lwt.cmxs"
 exists_if = "conduit-lwt.cma"
)

package "lwt-unix" (
 version = "@VERSION@"
 description = "Resolve URIs into Lwt channels under Unix"
 requires = "conduit.lwt @LWT_UNIX_REQUIRES@ @VCHAN_LWT_REQUIRES@ @LAUNCHD_LWT_REQUIRES@"
 archive(byte) = "conduit-lwt-unix.cma"
 archive(byte, plugin) = "conduit-lwt-unix.cma"
 archive(native) = "conduit-lwt-unix.cmxa"
 archive(native, plugin) = "conduit-lwt-unix.cmxs"
 exists_if = "conduit-lwt-unix.cma"
)

package "mirage" (
 version = "@VERSION@"
 description = "Resolve URIs into Lwt channels under Mirage"
 requires = "conduit.lwt @MIRAGE_REQUIRES@"
 archive(byte) = "conduit-lwt-mirage.cma"
 archive(byte, plugin) = "conduit-lwt-mirage.cma"
 archive(native) = "conduit-lwt-mirage.cmxa"
 archive(native, plugin) = "conduit-lwt-mirage.cmxs"
 exists_if = "conduit-lwt-mirage.cma"
)

package "async" (
 version = "@VERSION@"
 description = "Resolve URIs into Async channels"
 requires = "conduit @ASYNC_REQUIRES@"
 archive(byte) = "conduit-async.cma"
 archive(byte, plugin) = "conduit-async.cma"
 archive(native) = "conduit-async.cmxa"
 archive(native, plugin) = "conduit-async.cmxs"
 exists_if = "conduit-async.cma"
)
